<div>
    <svg 
        version="1.1"
        xmlns="http://www.w3.org/2000/svg"
        xmlns:wow="http://example.org/wow"
        xmlns:xlink="http://www.w3.org/1999/xlink"
        unselectable="on" 
        style="-webkit-user-select: none;"
        id="svg"
    	tabindex='1'
    	viewBox="0 0 960 600"
    	width="100%"
    	height="100%"
    	preserveAspectRatio="none"
        >
        <wow:image src="/assets/backgrounds/default.svg" width="960" height="600"></wow:image>
        <g transform="translate(840, 20)">
            <wow:iconbutton id="quitButton" name="quitButton" src="quit"></wow:iconbutton>
        </g>
        <g transform="translate(20, 20)">
            <wow:iconbutton name="favButton" src="favorite"></wow:iconbutton>
        </g>
        <g transform="translate(20, 140)">
            <wow:iconbutton name="unfavButton" src="unfavorite"></wow:iconbutton>
        </g>
        <g transform="translate(360, 510)">
            <wow:iconbutton id="playButton" name="playButton" src="play" width="60" height="60"></wow:iconbutton>
        </g>
        <g transform="translate(450, 510)">
            <wow:iconbutton id="pauseButton" name="pauseButton" src="pause" width="60" height="60"></wow:iconbutton>
        </g>
        <g transform="translate(540, 510)">
            <wow:iconbutton id="stopButton" name="stopButton" src="stop" width="60" height="60"></wow:iconbutton>
        </g>

    	<g id="tempgroup" style="display:none;"></g>    
    </svg>
    <div class="video-wrapper">
        <div class="video-container">
            <div id="ytplayer"></div>
        </div>
    </div>
    <script>
        // Useful tip: http://avexdesigns.com/responsive-youtube-embed/

        // Load the IFrame Player API code asynchronously.
        var tag = document.createElement('script');
        tag.src = "https://www.youtube.com/player_api";
        var firstScriptTag = document.getElementsByTagName('script')[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

        // Replace the 'ytplayer' element with an <iframe> and
        // YouTube player after the API code downloads.
        ////var player; -> we make player a global...
        function onYouTubePlayerAPIReady() {

        player = new YT.Player('ytplayer', {
          height: '480',
          width: '640',
          videoId: "{{query.id}}",
          allowfullscreen: true,
          playerVars: {
            autoplay: 0,
            controls: 1, // controls=0 -> cannot control volume via API or go fullscreen!
            enablejsapi: 1,
            showinfo: 0,
            fs: 1
          },
        events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
        }
        function onPlayerReady(evt) {
            // do something...
            evt.target.playVideo();
        }
        function onPlayerStateChange(evt) {
            switch(evt.data) {
                case 1: 
                    console.log("Started playing!")
                    // play button will be disabled
                    // pause and stop will be enabled
                    break;
                case 2:
                    console.log("Paused!")
                    // pause button will be disabled
                    // play and stop button will be enabled
                    break;
                case 5:
                    console.log("Stopped!")
                    // play button will be enabled
                    // pause and stop buttons will be disabled
                    break;
            }
        }
    </script>

</div>