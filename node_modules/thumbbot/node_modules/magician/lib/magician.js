// Generated by CoffeeScript 1.3.3
var Magician, exec;

exec = require('child_process').exec;

Magician = (function() {

  function Magician(srcPath, destPath) {
    this.srcPath = srcPath;
    this.destPath = destPath;
    this.srcPath = '"' + this.srcPath + '"';
    this.destPath = '"' + this.destPath + '"';
  }

  Magician.prototype.resize = function(options, callback) {
    var command;
    if (!options.width || options.width < 0 || !options.height || options.height < 0) {
      return callback(new Error("width and height should be bigger than 0"));
    }
    command = 'resize';
    if (options.thumbnail) {
      command = 'thumbnail';
    }
    if (options.sample) {
      command = 'sample';
    }
    return exec("convert " + this.srcPath + " -" + command + " " + options.width + "x" + options.height + "! " + this.destPath, function(err) {
      if (callback) {
        return callback(err);
      }
    });
  };

  Magician.prototype.resizeTo = function(width, height, callback) {
    return this.resize({
      width: width,
      height: height
    }, callback);
  };

  Magician.prototype.crop = function(options, callback) {
    if (!options.x) {
      options.x = 0;
    }
    if (!options.y) {
      options.y = 0;
    }
    if (options.x < 0 || options.y || options.width < 0 || options.height < 0) {
      if (callback) {
        callback(new Error("x, y should be bigger than -1; width and height should be bigger than 0"));
      }
      return;
    }
    return exec("convert " + this.srcPath + " -crop " + options.width + "x" + options.height + "+" + options.x + "+" + options.y + " " + this.destPath, function(err) {
      if (callback) {
        return callback(err);
      }
    });
  };

  Magician.prototype.cropFrom = function(x, y, width, height, callback) {
    return this.crop({
      x: x,
      y: y,
      width: width,
      height: height
    }, callback);
  };

  Magician.prototype.convert = function(callback) {
    return exec("convert " + this.srcPath + " " + this.destPath, function(err) {
      if (callback) {
        return callback(err);
      }
    });
  };

  Magician.prototype.getDimensions = function(callback) {
    var _this = this;
    return exec("identify " + this.srcPath, function(err, stdout) {
      var height, width, _ref;
      if (err) {
        if (callback) {
          callback(err);
        }
        return;
      }
      _ref = stdout.split(" ")[2].split("x"), width = _ref[0], height = _ref[1];
      _this.width = parseInt(width);
      _this.height = parseInt(height);
      if (callback) {
        return callback(false, {
          width: _this.width,
          height: _this.height
        });
      }
    });
  };

  return Magician;

})();

module.exports = Magician;
