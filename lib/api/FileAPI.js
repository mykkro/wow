/* File autogenerated by craft  */

var fs = require('fs'); 
var path = require("path")
var IndexedNodeAPI = require("./IndexedNodeAPI")

var _fileDAO = null
var fileDAO = function() {
	if(!_fileDAO) 
		_fileDAO = require("../dao/FileDAO")
	return new (_fileDAO)
}
var _fileTpl = null
var fileTpl = function() {
	if(!_fileTpl) 
		_fileTpl = fs.readFileSync(path.join(__dirname, "../../templates/nodes/file.default.html"), "utf8")
	return _fileTpl
}

var withUrls = function(err, file, next) {
	if(err) {
		next(err)
	} else {
		var origName = file.originalFilename
		var ext =  origName.split('.').pop()
		file.url = "/uploads/" + file.uuid + "." + ext
		file.thumbnailUrl = "/uploads/thumbs/"+file.uuid+".png"
		next(null, file)
	}
}

var FileAPI = IndexedNodeAPI.extend({
	constructor: function() {
		this.base("file", fileDAO, fileTpl, {"color":"#eec"})
	},
	getThumbnailUri: function(data) {		
		return this.thumbFromUUID(data.uuid)
	},
	getByUuid: function(uuid, next) {
		this.findOne({uuid:uuid}, function(err, file) {
			withUrls(err, file, next)
		})
	},
	get: function(id, next) {
		this.base(id, function(err, file) {
			withUrls(err, file, next)
		})
	}

})

module.exports = FileAPI