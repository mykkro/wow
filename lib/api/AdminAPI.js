/* File autogenerated by craft  */

var fs = require('fs'); 
var path = require("path")
var bcrypt = require("bcrypt-nodejs")
var IndexedNodeAPI = require("./IndexedNodeAPI")
var delegate = require("../delegate")

var adminDAO = new (require("../dao/AdminDAO"))

var AdminAPI = IndexedNodeAPI.extend({
	constructor: function() {
		this.base("admin", adminDAO, {"color":"#ffe"})
	},
	/* next = function(err, result) */
	create: function(data, next) {
		var self = this
		var aa = self
		var bb = self.base
		// this works!
		var func = delegate(self, self.base, data, next);
		if(data.username) {
			self.existsp(data.username).done(function(exists) {
				if(exists) {
					next(new Error("Admin already exists!"));
				} else {
					// create it...
					var hash = bcrypt.hashSync(data.password)
					data.password = hash
					func()
				}
			})
		} else {
			// username will be created from ID
			var hash = bcrypt.hashSync(data.password)
			data.password = hash
			self.base(data, function(err, res) {
				if(err) {
					next(err);
				} else {
					var data = res[0]
					data.username = "autoadmin-"+data._id
					self.update(data._id, data, function(err, res2) {
						if(err) next(err);
						else next(null, [data])
					})
				}
			})
		}
	},
	getThumbnailUri: function(data) {	
		return this.thumbFromUUID(data.avatar)
	},
	exists: function(username, next) {
		this.countp({username:username}).done(function(cnt) {
			next(null, cnt>0)
		})
	},
	existsp: function(username, next) {
		return this.countp({username:username})
	}

})

module.exports = AdminAPI
